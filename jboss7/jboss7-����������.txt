1 jboss7 nohup ./standalone.sh &命令。这样服务器就会在后台运行，即使关闭命令窗口，服务器依然运行

2 apr 
配置standalone
  <subsystem xmlns="urn:jboss:domain:web:1.1" default-virtual-server="default-host" native="false"> native="true"
            <connector name="http" protocol="HTTP/1.1" scheme="http" socket-binding="http"/>
            <virtual-server name="default-host" enable-welcome-root="true">
                <alias name="localhost"/>
                <alias name="example.com"/>
            </virtual-server>
   </subsystem>
   //native="true"
   配置前[org.apache.coyote.http11.Http11Protocol] (MSC service thread 1-1) Starting Coyote HTTP/1.1 on http-localhost-127.0.0.1-8080   
   配置后[org.apache.coyote.http11.Http11AprProtocol] (MSC service thread 1-1) Starting Coyote HTTP/1.1 on http-localhost-127.0.0.1-8080

3 jboss7 上JBoss的7和java.lang.NoClassDefFoundError：com/sun/image/codec/jpeg/JPEGCodec
  修改
  Changing your runtime environment (to Java 7, for example) is a good way to cause this.
  The basic explanation is that com.sun.image.codec.jpeg.JPEGCodec 
  and related libraries have long been marked as depreciated,
  and you should use the ImageIO library instead. 
  Cold comfort if you are using libraries that you have no control over and 
  can’t do the conversion and re-build them. 
  The quick way to resolve this runtime error in JBoss is to put an 
  entry in the <JBoss-install-diectory>/modules/sun/jdk/main/module.xml file:
  
  <JBoss-install-diectory>/modules/sun/jdk/main/module.xml file:
  
  add 
  Note the line path name=”com/sun/image/codec/jpeg” added to the <paths> subtree.
Your stacktrace regarding the com/sun/image/codec/jpeg/JPEGCodec error will be resolved and you will go on 

4 root
 <virtual-server name="default-host" enable-welcome-root="true">
                <alias name="localhost"/>
                <alias name="example.com"/>
  </virtual-server>
除掉enable-welcome-root="true" web项目中与web.xml同级目录下添加jboss-web.xml